/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_stock_str.h                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: evgenkarlson <RTFM@42.fr>                  +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/02/14 12:33:14 by evgenkarlson      #+#    #+#             */
/*   Updated: 2021/01/21 02:13:18 by evgenkarlson     ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

/* ************************************************************************** */
/* ************************************************************************** **
**
**  Каталог сдачи задания: ex04/
**  Файлы для сдачи: ft_strs_to_tab.c	
**  Разрешенные функции: malloc, free
**
** ************************************************************************** **
**
** 
**  - Создайте функцию, которая принимает в качестве аргумента массив строк и
**  размер этого массива строк.
**  
**  
**  -  Ваша функция должна быть объявлена ​​следующим образом :
--------------------------------------------------------------------------------

                      struct s_stock_par	*ft_strs_to_tab(int ac, char **av);

--------------------------------------------------------------------------------
**
**
**  - Он превратит каждый элемент массива строк "av" в структуру.
**
**  
**  - Структура будет определена в файле "ft_stock_str.h", который мы предоставим,
**  с таким же содержимым ка тут:
--------------------------------------------------------------------------------

    typedef	struct		s_stock_str
    {
        int		size;
        char	*str;
        char	*copy;
    }					t_stock_str;

--------------------------------------------------------------------------------
**      * 'size' - это длина строки. 
** 
**      * 'str' - указатель хранящий начало строки.
** 
**      * 'copy' - указатель хранящий начало копии строки.
** 
** 
**  - Функция должна соблюдать порядок строк массива 'av'.
** 
**  - Возвращаемый массив должен быть размещен в памяти, а его последний 
**  элемент "str" должен быть установлен в '0', это будет отмечать конец массива.
** 
**  - При возникновении ошибки он должен вернуть нулевой указатель(NULL).
**
**  - Мы протестируем вашу функцию с помощью нашего 'ft_show_tab' (следующее 
**  упражнение). Примите соответствующие меры, cделайте так, чтобы это работало!
**
**
** ************************************************************************** **
**
**  Скомпилируй файл тест. В нем можно увидеть как работает эта функция вживую
**
** ************************************************************************** */
/* ************************************************************************** */


#ifndef FT_STOCK_STR_H
# define FT_STOCK_STR_H

typedef struct	s_stock_str
{
	int		size;
	char	*str;
	char	*copy;
}				t_stock_str;

#endif


/* ************************************************************************** */
/* ************************************************************************** */